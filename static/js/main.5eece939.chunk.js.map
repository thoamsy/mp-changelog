{"version":3,"sources":["ChangeLogDrawer.jsx","TrelloCard.jsx","utils.js","useVimShortcut.js","App.js","serviceWorker.js","index.js"],"names":["md","Markdown","ChangeLogDrawer","_ref","changelog","visible","onClose","container","changelogWithParse","useMemo","render","react_default","a","createElement","drawer_default","width","title","placement","mask","getContainer","current","className","dangerouslySetInnerHTML","__html","TrelloCard","_ref$fields","fields","showStep","process","name","desc","labels","toggleDetail","index","onCloseDrawer","tags","map","label","tag_default","key","id","color","actions","icon_default","type","onClick","steps","Fragment","steps_default","length","size","Step","icon","rotate","divider_default","cardRef","useRef","tabIndex","ref","card_default","extra","concat","row_default","gutter","field","col_default","span","typography_default","Title","level","Paragraph","value","twoToneColor","src_ChangeLogDrawer","convertCustomFieldItems","fieldMaps","fieldsDesc","forEach","item","common","idCustomField","text","push","Object","objectSpread","checked","tagsCanFocus","focusElement","element","matches","tabindex","getAttribute","canFocus","console","error","focus","indexById","arguments","undefined","reduce","res","fetchTrelloInformation","fetch","mode","then","ok","json","clockIcon","due","deadline","Date","popover_default","content","statistic_default","Countdown","Number","format","toLocaleDateString","spin","theme","style","fontSize","rocketIcon","tooltip_default","App","_useState","useState","_useState2","slicedToArray","cards","setCards","_useState3","_useState4","setVisible","useEffect","_adaptApi","asyncToGenerator","regenerator_default","mark","_callee","trelloCards","customFields","customFieldsMap","wrap","_context","prev","next","sent","card","assign","customFieldItems","slice","Array","from","stop","apply","this","adaptApi","useCallback","state","s","i","section","containerRef","listLength","selector","onEnter","selectedIndex","lastKeyDown","children","querySelectorAll","moveDown","moveUp","document","body","scrollIntoView","onKeyDownHandler","e","toLowerCase","shiftKey","preventDefault","metaKey","window","addEventListener","removeEventListener","useVimShortcut","timeline_default","Item","dot","dueComplete","src_TrelloCard","spin_default","Boolean","location","hostname","match","ReactDOM","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5eece939.chunk.js","sourcesContent":["import React, { useMemo } from 'react';\n\nimport Drawer from 'antd/lib/drawer';\n\nimport Markdown from 'markdown-it';\n\nconst md = new Markdown();\n\nconst ChangeLogDrawer = ({ changelog, visible, onClose, container }) => {\n  const changelogWithParse = useMemo(() => md.render(changelog), [changelog]);\n  return (\n    <Drawer\n      width={500}\n      title=\"更新日志\"\n      placement=\"right\"\n      mask={false}\n      getContainer={() => container.current}\n      onClose={onClose}\n      visible={visible}\n    >\n      <section\n        className=\"content\"\n        dangerouslySetInnerHTML={{ __html: changelogWithParse }}\n      />\n    </Drawer>\n  );\n};\nexport default ChangeLogDrawer;\n","import React, { useMemo, useRef } from 'react';\nimport Card from 'antd/lib/card';\nimport Icon from 'antd/lib/icon';\nimport Typography from 'antd/lib/typography';\nimport Row from 'antd/lib/row';\nimport Col from 'antd/lib/col';\nimport Tag from 'antd/lib/tag';\nimport Steps from 'antd/lib/steps';\nimport Divider from 'antd/lib/divider';\n\nimport ChangeLogDrawer from './ChangeLogDrawer';\n\nconst TrelloCard = ({\n  fields = [],\n  showStep,\n  process,\n  name,\n  desc,\n  labels,\n  toggleDetail,\n  index,\n  visible,\n  onCloseDrawer\n}) => {\n  const tags = useMemo(\n    () =>\n      labels.map(label => (\n        <Tag key={label.id} color={label.color}>\n          {label.name}\n        </Tag>\n      )),\n    [labels]\n  );\n\n  const actions = useMemo(\n    () => [<Icon type=\"ellipsis\" onClick={toggleDetail} />],\n    [toggleDetail]\n  );\n\n  const steps = useMemo(\n    () =>\n      showStep && (\n        <>\n          <Steps current={process.length} size=\"small\">\n            <Steps.Step title=\"开发中\" icon={<Icon type=\"tool\" />} />\n            <Steps.Step title=\"发布体验版\" icon={<Icon type=\"coffee\" />} />\n            <Steps.Step\n              title=\"发布稳定版\"\n              icon={<Icon type=\"rocket\" rotate={30} />}\n            />\n          </Steps>\n          <Divider />\n        </>\n      ),\n    [process.length, showStep]\n  );\n\n  const cardRef = useRef();\n\n  return (\n    <section tabIndex=\"0\" className=\"trello-card\" ref={cardRef}>\n      <Card extra={tags} actions={actions} title={`版本号：${name}`}>\n        {steps}\n        <Row gutter={16}>\n          {fields.length ? (\n            fields.map(field => (\n              <Col span={24} key={field.id}>\n                <Typography.Title level={4}>{field.name}</Typography.Title>\n                <Typography.Paragraph>\n                  {typeof field.value === 'boolean' ? (\n                    <p>\n                      已发布 <Icon type=\"smile\" twoToneColor />\n                    </p>\n                  ) : (\n                    field.value\n                  )}\n                </Typography.Paragraph>\n              </Col>\n            ))\n          ) : (\n            <Col span={24}>\n              <Typography.Paragraph>状态待更新</Typography.Paragraph>\n            </Col>\n          )}\n        </Row>\n      </Card>\n      <ChangeLogDrawer\n        changelog={desc}\n        container={cardRef}\n        visible={visible}\n        onClose={onCloseDrawer}\n      />\n    </section>\n  );\n};\n\nexport default TrelloCard;\n","export const indexBy = key => (lists = []) => {\n  return lists.reduce((res, item) => (res[item.id] = item) && res, {});\n};\n\nexport function convertCustomFieldItems(fields, fieldMaps) {\n  const [process, fieldsDesc] = [[], []];\n  fields.forEach(item => {\n    const theField = fieldMaps[item.idCustomField];\n    const common = { name: theField.name, id: item.id };\n    if (item.value.text) {\n      fieldsDesc.push({ ...common, value: item.value.text });\n    } else {\n      process.push({ ...common, value: item.value.checked });\n    }\n  });\n  return { process, fields: fieldsDesc };\n}\n","import { useEffect, useCallback, useRef } from 'react';\n\nconst tagsCanFocus = [\n  'a[href]',\n  'area[href]',\n  'input',\n  'select',\n  'textarea',\n  'button'\n];\nconst canFocusElementSelector = `a[href]:not([tabindex='-1']),\n  area[href]:not([tabindex='-1']),\n  input:not([disabled]):not([tabindex='-1']),\n  select:not([disabled]):not([tabindex='-1']),\n  textarea:not([disabled]):not([tabindex='-1']),\n  button:not([disabled]):not([tabindex='-1']),\n  iframe:not([tabindex='-1']),\n  [tabindex]:not([tabindex='-1']),\n  [contentEditable=true]:not([tabindex='-1'])`;\n\nconst canFocus = element => {\n  if (!element) return true;\n  if (element.matches(canFocusElementSelector)) {\n    return true;\n  }\n  const tabindex = element.getAttribute('tabindex');\n  return tabindex !== null && +tabindex >= 0;\n};\n\nconst focusElement = element => {\n  if (!canFocus(element)) {\n    console.error(\n      `当前 element 不支持 focus，请添加 tabIndex，或者使用满足条件的标签: ${tagsCanFocus}`\n    );\n    return;\n  }\n  element.focus();\n};\n\nexport default function useVimShortcut(\n  containerRef,\n  { listLength, selector, onEnter }\n) {\n  const selectedIndex = useRef(-1);\n  const lastKeyDown = useRef({ key: '' });\n  const children = useRef([]);\n\n  useEffect(() => {\n    children.current = selector\n      ? containerRef.current.querySelectorAll(selector)\n      : containerRef.current.children;\n  }, [containerRef, listLength, selector]);\n\n  const moveDown = useCallback(() => {\n    let index = selectedIndex.current;\n    if (index < listLength - 1) selectedIndex.current = ++index;\n    focusElement(children.current[index]);\n  }, [listLength]);\n\n  const moveUp = () => {\n    let index = selectedIndex.current;\n    if (index < 1) return;\n    selectedIndex.current = --index;\n    focusElement(children.current[index]);\n    if (!index) {\n      document.body.scrollIntoView();\n    }\n  };\n\n  const onKeyDownHandler = useCallback(\n    e => {\n      const key = e.key.toLowerCase();\n      let index = selectedIndex.current;\n      switch (key) {\n        case 'tab': {\n          if (e.shiftKey) {\n            moveUp();\n          } else {\n            moveDown();\n          }\n          e.preventDefault();\n          break;\n        }\n        case 'arrowdown':\n        case 'j': {\n          moveDown();\n          break;\n        }\n        case 'arrowup':\n        case 'k': {\n          moveUp();\n          break;\n        }\n        case 'g': {\n          if (e.shiftKey) {\n            selectedIndex.current = index = listLength - 1;\n          } else if (\n            e.key === lastKeyDown.current.key &&\n            e.metaKey === lastKeyDown.current.metaKey\n          ) {\n            selectedIndex.current = index = 0;\n          }\n          focusElement(children.current[index]);\n          break;\n        }\n\n        case 'enter': {\n          onEnter && onEnter(index);\n          break;\n        }\n        default:\n          break;\n      }\n      lastKeyDown.current = e;\n    },\n    [listLength, moveDown, onEnter]\n  );\n\n  useEffect(() => {\n    if (!containerRef.current) {\n      return;\n    }\n    window.addEventListener('keydown', onKeyDownHandler);\n    return () => window.removeEventListener('keydown', onKeyDownHandler);\n  }, [containerRef, onKeyDownHandler, selector]);\n}\n","import React, { useEffect, useState, useRef, useCallback } from 'react';\nimport Timeline from 'antd/lib/timeline';\nimport Icon from 'antd/lib/icon';\nimport Popover from 'antd/lib/popover';\nimport Tooltip from 'antd/lib/tooltip';\nimport Statistic from 'antd/lib/statistic';\nimport Spin from 'antd/lib/spin';\nimport TrelloCard from './TrelloCard';\nimport { indexBy, convertCustomFieldItems } from './utils';\nimport useVimShortcut from './useVimShortcut';\n\nconst trelloAPI = 'https://trello.com/b/FuVtXQQ5/零售小程序版本记录.json';\nconst indexById = indexBy('id');\n\nconst fetchTrelloInformation = () => {\n  return fetch(trelloAPI, {\n    mode: 'cors'\n  }).then(res => res.ok && res.json());\n};\n\nconst clockIcon = due => {\n  const deadline = new Date(due);\n  return (\n    <Popover\n      content={\n        <Statistic.Countdown\n          title=\"还有\"\n          value={Number(deadline)}\n          format=\"D 天 H 时\"\n        />\n      }\n      title={`预计 ${deadline.toLocaleDateString()} 发布`}\n    >\n      <Icon\n        spin\n        type=\"clock-circle-o\"\n        theme=\"twoTone\"\n        style={{ fontSize: 18 }}\n      />\n    </Popover>\n  );\n};\n\nconst rocketIcon = (\n  <Tooltip title=\"已发布\">\n    <Icon type=\"rocket\" rotate={30} theme=\"twoTone\" style={{ fontSize: 18 }} />\n  </Tooltip>\n);\n\nconst App = () => {\n  const [cards, setCards] = useState([]);\n  const [visible, setVisible] = useState([]);\n\n  useEffect(() => {\n    async function adaptApi() {\n      const trelloCards = await fetchTrelloInformation();\n      const { cards, customFields } = trelloCards;\n      const customFieldsMap = indexById(customFields);\n\n      cards.forEach(card => {\n        Object.assign(\n          card,\n          convertCustomFieldItems(card.customFieldItems, customFieldsMap)\n        );\n      });\n      setCards(cards.slice(0, -1)); // 最后一张比较特殊，不需要\n      setVisible(Array.from({ length: cards.length }, () => false));\n    }\n\n    adaptApi();\n  }, []);\n\n  const toggleDetail = useCallback(index => {\n    setVisible(state => state.map((s, i) => (i === index ? !s : s)));\n  }, []);\n\n  const onClose = useCallback(\n    index =>\n      setVisible(state => state.map((s, i) => (i === index ? false : s)), []),\n    []\n  );\n\n  const section = useRef();\n  useVimShortcut(section, {\n    listLength: cards.length,\n    selector: '.trello-card',\n    onEnter: toggleDetail\n  });\n\n  return (\n    <div className=\"section\">\n      <section ref={section} className=\"container card-container\">\n        <h3 className=\"title\">零售小程序版本记录</h3>\n        {cards.length ? (\n          <main>\n            <Timeline>\n              {cards.map((card, index) => (\n                <Timeline.Item\n                  color=\"green\"\n                  key={card.id}\n                  dot={\n                    !card.due || card.dueComplete\n                      ? rocketIcon\n                      : clockIcon(card.due)\n                  }\n                >\n                  <TrelloCard\n                    name={card.name}\n                    desc={card.desc}\n                    fields={card.fields}\n                    labels={card.labels}\n                    due={card.due}\n                    dueComplete={card.dueComplete}\n                    process={card.process}\n                    visible={visible[index]}\n                    toggleDetail={() => toggleDetail(index)}\n                    onCloseDrawer={() => onClose(index)}\n                    showStep={index === 0}\n                  />\n                </Timeline.Item>\n              ))}\n              {!!cards.length && (\n                <Timeline.Item dot={<Icon type=\"frown\" theme=\"twoTone\" />}>\n                  消失在历史长河中的版本记录\n                </Timeline.Item>\n              )}\n            </Timeline>\n          </main>\n        ) : (\n          <Spin size=\"large\" />\n        )}\n      </section>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bulma/css/bulma.min.css';\nimport 'antd/dist/antd.css';\nimport './style.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}